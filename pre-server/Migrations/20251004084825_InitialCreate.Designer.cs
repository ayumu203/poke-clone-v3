// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Data;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251004084825_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("server.Models.Basics.Move", b =>
                {
                    b.Property<int>("MoveId")
                        .HasColumnType("int");

                    b.Property<int>("Accuracy")
                        .HasColumnType("int");

                    b.Property<int>("AccuracyChange")
                        .HasColumnType("int");

                    b.Property<string>("Ailment")
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.Property<int>("AilmentChance")
                        .HasColumnType("int");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.Property<string>("DamageClass")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("Draining")
                        .HasColumnType("int");

                    b.Property<int>("Healing")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.Property<int?>("PokemonSpeciesId")
                        .HasColumnType("int");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<int>("Pp")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("RankChance")
                        .HasColumnType("int");

                    b.Property<int>("SpecialAttack")
                        .HasColumnType("int");

                    b.Property<int>("SpecialDefense")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.HasKey("MoveId");

                    b.HasIndex("PokemonSpeciesId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("server.Models.Basics.Player", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("server.Models.Basics.PlayerParty", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("SlotIndex")
                        .HasColumnType("int");

                    b.HasKey("PlayerId", "PokemonId");

                    b.HasIndex("PokemonId");

                    b.ToTable("PlayerParties");
                });

            modelBuilder.Entity("server.Models.Basics.Pokemon", b =>
                {
                    b.Property<int>("PokemonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PokemonId"));

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("Move1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Move2Id")
                        .HasColumnType("int");

                    b.Property<int?>("Move3Id")
                        .HasColumnType("int");

                    b.Property<int?>("Move4Id")
                        .HasColumnType("int");

                    b.Property<string>("PlayerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PokemonSpeciesId")
                        .HasColumnType("int");

                    b.HasKey("PokemonId");

                    b.HasIndex("Move1Id");

                    b.HasIndex("Move2Id");

                    b.HasIndex("Move3Id");

                    b.HasIndex("Move4Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("PokemonSpeciesId");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("server.Models.Basics.PokemonMove", b =>
                {
                    b.Property<int>("PokemonSpeciesId")
                        .HasColumnType("int");

                    b.Property<int>("MoveId")
                        .HasColumnType("int");

                    b.HasKey("PokemonSpeciesId", "MoveId");

                    b.HasIndex("MoveId");

                    b.ToTable("PokemonMoves");
                });

            modelBuilder.Entity("server.Models.Basics.PokemonSpecies", b =>
                {
                    b.Property<int>("PokemonSpeciesId")
                        .HasColumnType("int");

                    b.Property<string>("BackImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("BaseAttack")
                        .HasColumnType("int");

                    b.Property<int>("BaseDefense")
                        .HasColumnType("int");

                    b.Property<int>("BaseHp")
                        .HasColumnType("int");

                    b.Property<int>("BaseSpecialAttack")
                        .HasColumnType("int");

                    b.Property<int>("BaseSpecialDefense")
                        .HasColumnType("int");

                    b.Property<int>("BaseSpeed")
                        .HasColumnType("int");

                    b.Property<int?>("EvolveLevel")
                        .HasColumnType("int");

                    b.Property<string>("FrontImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.Property<string>("Type1")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.Property<string>("Type2")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.HasKey("PokemonSpeciesId");

                    b.ToTable("PokemonSpecies");
                });

            modelBuilder.Entity("server.Models.Basics.Move", b =>
                {
                    b.HasOne("server.Models.Basics.PokemonSpecies", null)
                        .WithMany("Moves")
                        .HasForeignKey("PokemonSpeciesId");
                });

            modelBuilder.Entity("server.Models.Basics.PlayerParty", b =>
                {
                    b.HasOne("server.Models.Basics.Player", "Player")
                        .WithMany("PlayerParties")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.Basics.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("server.Models.Basics.Pokemon", b =>
                {
                    b.HasOne("server.Models.Basics.Move", "Move1")
                        .WithMany()
                        .HasForeignKey("Move1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("server.Models.Basics.Move", "Move2")
                        .WithMany()
                        .HasForeignKey("Move2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("server.Models.Basics.Move", "Move3")
                        .WithMany()
                        .HasForeignKey("Move3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("server.Models.Basics.Move", "Move4")
                        .WithMany()
                        .HasForeignKey("Move4Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("server.Models.Basics.Player", "Player")
                        .WithMany("Pokemons")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.Basics.PokemonSpecies", "PokemonSpecies")
                        .WithMany()
                        .HasForeignKey("PokemonSpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Move1");

                    b.Navigation("Move2");

                    b.Navigation("Move3");

                    b.Navigation("Move4");

                    b.Navigation("Player");

                    b.Navigation("PokemonSpecies");
                });

            modelBuilder.Entity("server.Models.Basics.PokemonMove", b =>
                {
                    b.HasOne("server.Models.Basics.Move", "Move")
                        .WithMany()
                        .HasForeignKey("MoveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.Basics.PokemonSpecies", "PokemonSpecies")
                        .WithMany()
                        .HasForeignKey("PokemonSpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Move");

                    b.Navigation("PokemonSpecies");
                });

            modelBuilder.Entity("server.Models.Basics.Player", b =>
                {
                    b.Navigation("PlayerParties");

                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("server.Models.Basics.PokemonSpecies", b =>
                {
                    b.Navigation("Moves");
                });
#pragma warning restore 612, 618
        }
    }
}
