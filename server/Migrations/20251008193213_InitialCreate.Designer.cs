// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Data;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251008193213_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("server.Models.Core.LearnedMove", b =>
                {
                    b.Property<int>("LearnedMoveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LearnedMoveId"));

                    b.Property<int>("CurrentPP")
                        .HasColumnType("int");

                    b.Property<int>("MoveId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.HasKey("LearnedMoveId");

                    b.HasIndex("MoveId");

                    b.HasIndex("PokemonId");

                    b.ToTable("LearnedMoves");
                });

            modelBuilder.Entity("server.Models.Core.Move", b =>
                {
                    b.Property<int>("MoveId")
                        .HasColumnType("int");

                    b.Property<int>("Accuracy")
                        .HasColumnType("int");

                    b.Property<int>("Ailment")
                        .HasColumnType("int");

                    b.Property<int>("AilmentChance")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int>("DamageClass")
                        .HasColumnType("int");

                    b.Property<int>("Drain")
                        .HasColumnType("int");

                    b.Property<int>("Healing")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PP")
                        .HasColumnType("int");

                    b.Property<int?>("PokemonSpeciesId")
                        .HasColumnType("int");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("StatChance")
                        .HasColumnType("int");

                    b.Property<string>("StatTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("MoveId");

                    b.HasIndex("PokemonSpeciesId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("server.Models.Core.Player", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("server.Models.Core.Pokemon", b =>
                {
                    b.Property<int>("PokemonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PokemonId"));

                    b.Property<int>("Ailment")
                        .HasColumnType("int");

                    b.Property<int>("CurrentHP")
                        .HasColumnType("int");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("PlayerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PokemonSpeciesId")
                        .HasColumnType("int");

                    b.HasKey("PokemonId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("PokemonSpeciesId");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("server.Models.Core.PokemonSpecies", b =>
                {
                    b.Property<int>("PokemonSpeciesId")
                        .HasColumnType("int");

                    b.Property<string>("BackImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BaseAttack")
                        .HasColumnType("int");

                    b.Property<int>("BaseDefense")
                        .HasColumnType("int");

                    b.Property<int>("BaseHP")
                        .HasColumnType("int");

                    b.Property<int>("BaseSpecialAttack")
                        .HasColumnType("int");

                    b.Property<int>("BaseSpecialDefense")
                        .HasColumnType("int");

                    b.Property<int>("BaseSpeed")
                        .HasColumnType("int");

                    b.Property<int>("EvolveLevel")
                        .HasColumnType("int");

                    b.Property<string>("FrontImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type1")
                        .HasColumnType("int");

                    b.Property<int?>("Type2")
                        .HasColumnType("int");

                    b.HasKey("PokemonSpeciesId");

                    b.ToTable("PokemonSpecies");
                });

            modelBuilder.Entity("server.Models.Core.LearnedMove", b =>
                {
                    b.HasOne("server.Models.Core.Move", "Move")
                        .WithMany()
                        .HasForeignKey("MoveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("server.Models.Core.Pokemon", "Pokemon")
                        .WithMany("LearnedMoves")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Move");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("server.Models.Core.Move", b =>
                {
                    b.HasOne("server.Models.Core.PokemonSpecies", null)
                        .WithMany("MoveList")
                        .HasForeignKey("PokemonSpeciesId");

                    b.OwnsOne("server.Models.Core.Rank", "Rank", b1 =>
                        {
                            b1.Property<int>("MoveId")
                                .HasColumnType("int");

                            b1.Property<int>("Accuracy")
                                .HasColumnType("int");

                            b1.Property<int>("Attack")
                                .HasColumnType("int");

                            b1.Property<int>("Defense")
                                .HasColumnType("int");

                            b1.Property<int>("Evasion")
                                .HasColumnType("int");

                            b1.Property<int>("SpecialAttack")
                                .HasColumnType("int");

                            b1.Property<int>("SpecialDefense")
                                .HasColumnType("int");

                            b1.Property<int>("Speed")
                                .HasColumnType("int");

                            b1.HasKey("MoveId");

                            b1.ToTable("Moves");

                            b1.WithOwner()
                                .HasForeignKey("MoveId");
                        });

                    b.Navigation("Rank")
                        .IsRequired();
                });

            modelBuilder.Entity("server.Models.Core.Pokemon", b =>
                {
                    b.HasOne("server.Models.Core.Player", "Owner")
                        .WithMany("Pokemons")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.Core.PokemonSpecies", "Species")
                        .WithMany("Pokemons")
                        .HasForeignKey("PokemonSpeciesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("server.Models.Core.Rank", "Rank", b1 =>
                        {
                            b1.Property<int>("PokemonId")
                                .HasColumnType("int");

                            b1.Property<int>("Accuracy")
                                .HasColumnType("int");

                            b1.Property<int>("Attack")
                                .HasColumnType("int");

                            b1.Property<int>("Defense")
                                .HasColumnType("int");

                            b1.Property<int>("Evasion")
                                .HasColumnType("int");

                            b1.Property<int>("SpecialAttack")
                                .HasColumnType("int");

                            b1.Property<int>("SpecialDefense")
                                .HasColumnType("int");

                            b1.Property<int>("Speed")
                                .HasColumnType("int");

                            b1.HasKey("PokemonId");

                            b1.ToTable("Pokemons");

                            b1.WithOwner()
                                .HasForeignKey("PokemonId");
                        });

                    b.Navigation("Owner");

                    b.Navigation("Rank")
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("server.Models.Core.Player", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("server.Models.Core.Pokemon", b =>
                {
                    b.Navigation("LearnedMoves");
                });

            modelBuilder.Entity("server.Models.Core.PokemonSpecies", b =>
                {
                    b.Navigation("MoveList");

                    b.Navigation("Pokemons");
                });
#pragma warning restore 612, 618
        }
    }
}
